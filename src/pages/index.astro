---
import MainLayout from "../layouts/MainLayout.astro";
import NavFilter from "../components/NavFilter";
import Content from "../components/Content";

const data = (await import("../data/content.json")).default;
---

<MainLayout>
  <!-- MAIN RIGHT -->
  <div class="w-full" id="main-right">
    <div class="sm:w-1/2 w-full">
      <p class="leading-6">
        Hi, my name is Ardi Panda. I am a software engineer and designer living
        in Gresik. I work remotely and travel often, bringing my camera along
        with me. Sometimes I do photography. Here's what i'm up to now.
      </p>
      <p class="text-gray-500 text-xs italic mt-3">
        {
          new Date("25 May 2024").toLocaleDateString("en-US", {
            month: "long",
            day: "numeric",
            year: "numeric",
          })
        }
      </p>
    </div>
    <div class="mt-12">
      <section class="mt-8">
        <!-- Nav -->
        <div
          class="button-group flex flex-row gap-4 w-full flex-wrap"
          id="nav-tab"
        >
          <NavFilter client:load />
        </div>
        <div class="mt-4 min-h-[250px]">
          <div class="konten mt-4">
            <Content client:load />
          </div>
        </div>
      </section>
    </div>
  </div>
</MainLayout>

<style>
  .button-group button {
    color: brown;
  }

  .tab-pane {
    display: none;
  }

  .tab-pane.active {
    display: block;
  }
</style>

<script>
  // init Isotope
  import Isotope from "isotope-layout";
  const iso = new Isotope(".konten", {
    itemSelector: ".nav-content",
    masonry: {
      columnWidth: "",
    },
  });

  var filtersElem = document.querySelector(".button-group");
  filtersElem.addEventListener("click", function (event) {
    // only work with buttons
    if (!(event.target as Element).matches("button")) {
      return;
    }
    var filterValue = (event.target as HTMLElement).getAttribute("data-filter");
    // use matching filter function
    // filterValue = filterFns[filterValue] || filterValue;
    iso.arrange({ filter: filterValue });
  });

  // change is-checked class on buttons
  var buttonGroups = document.querySelectorAll(".button-group");
  for (var i = 0, len = buttonGroups.length; i < len; i++) {
    var buttonGroup = buttonGroups[i];
    radioButtonGroup(buttonGroup);
  }

  function radioButtonGroup(buttonGroup) {
    buttonGroup.addEventListener("click", function (event) {
      // only work with buttons
      if (!(event.target as Element).matches("button")) {
        return;
      }
      buttonGroup.querySelector(".is-checked").classList.remove("is-checked");
      event.target.classList.add("is-checked");
    });
  }
</script>
